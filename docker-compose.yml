version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    #    build:
    #      context: .
    #      dockerfile: ./docker/postgres/Dockerfile
    container_name: nova_postgres
    ports:
      - 4682:5432
    environment:
      POSTGRES_DB: $DB_NAME
      DB_NAME: $DB_NAME
      DB_SCHEMA: $DB_SCHEMA
      DB_APP_USER: $DB_APP_USER
      DB_APP_PASS: $DB_APP_PASS
      DB_MIGRATOR_USER: $DB_MIGRATOR_USER
      DB_MIGRATOR_PASS: $DB_MIGRATOR_PASS
      POSTGRES_USER: $DB_APP_USER
      POSTGRES_PASSWORD: $DB_APP_PASS
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres1:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d/
    networks:
      - default

  backend:
    build: .
    ports:
      - "3003:3003"
    env_file:
      - .env
    volumes:
      - $EXTERNAL_PATH/files:$FILE_PATH
    depends_on:
      - postgres
    networks:
      - default

  nginx:
    image: abevoelker/docker-nginx-alpine-brotli
    container_name: nginx
    volumes:
      - ../data/nginx/config/nginx_brotli.conf:/etc/nginx/nginx.conf:ro
      - ../data/nginx/conf.d:/etc/nginx/conf.d
      - ../data/public/angular:/var/www/angular
      - ../data/public/admin:/var/www/admin
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
      - ../data/logs/nginx:/var/log/nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - default

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    restart: always
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    links:
      - nginx
    networks:
      - default
networks:
  default:
